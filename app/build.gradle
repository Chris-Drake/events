apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"

    lintOptions {
        warning 'InvalidPackage'
    }

    signingConfigs {
        events {
            storeFile file("../keystore/android.jks")
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
    }

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 24
        versionCode 6
        versionName "1.2"

        signingConfig signingConfigs.events

        buildConfigField "long", "REALM_SCHEMA_VERSION", 1 + 'L'
        buildConfigField "String", "EVENTFINDER_API_USERNAME",
                "\"${System.getenv("EVENTFINDER_API_USERNAME")}\""
        buildConfigField "String", "EVENTFINDER_API_PASSWORD",
                "\"${System.getenv("EVENTFINDER_API_PASSWORD")}\""

        testInstrumentationRunner "nz.co.chrisdrake.events.EventsTestRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    def appCompatVersion = '24.2.0'
    def daggerVersion = '2.0.1'
    def retroFitVersion = '2.1.0'

    compile "com.android.support:appcompat-v7:${appCompatVersion}"
    compile "com.android.support:recyclerview-v7:${appCompatVersion}"
    compile "com.android.support:customtabs:${appCompatVersion}"

    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
    compile "com.google.dagger:dagger:${daggerVersion}"
    provided "org.glassfish:javax.annotation:10.0-b28"

    def butterKnifeVersion = '8.2.1'
    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    apt "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"

    compile 'com.jakewharton.timber:timber:4.1.0'

    compile "com.squareup.retrofit2:retrofit:${retroFitVersion}"
    compile "com.squareup.retrofit2:converter-moshi:${retroFitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retroFitVersion}"
    compile 'com.squareup.moshi:moshi:1.2.0'
    compile "com.squareup.picasso:picasso:2.5.2"
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'

    def autoValueVersion = '1.2'
    apt "com.google.auto.value:auto-value:${autoValueVersion}"
    provided "com.google.auto.value:auto-value:${autoValueVersion}"

    def autoValueMoshiVersion = '0.4.0-rc2'
    apt "com.ryanharter.auto.value:auto-value-moshi:${autoValueMoshiVersion}"
    provided "com.ryanharter.auto.value:auto-value-moshi:${autoValueMoshiVersion}"
    apt 'com.ryanharter.auto.value:auto-value-parcel:0.2.3-rc2'

    compile "io.reactivex:rxandroid:1.0.1"
    compile 'io.reactivex:rxjava:1.0.15'

    compile "io.realm:realm-android:0.82.2"

    compile "joda-time:joda-time:2.8.2"

    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:2.3.0'

    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:1.10.19"

    def testingSupportLibVersion = '0.4.1'
    androidTestCompile "com.android.support.test:runner:${testingSupportLibVersion}"
    androidTestCompile "com.android.support.test:rules:${testingSupportLibVersion}"
    androidTestCompile "com.android.support:support-annotations:${appCompatVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-core:2.2.1"
}